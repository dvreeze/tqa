/*
 * Copyright 2011-2017 Chris de Vreeze
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.cdevreeze.tqa.instance.js

import java.time.LocalDate

import org.scalatest.FunSuite

import eu.cdevreeze.tqa.instance._
import eu.cdevreeze.yaidom.core.EName
import eu.cdevreeze.yaidom.jsdom.JsDomDocument
import eu.cdevreeze.yaidom.jsdom.JsDomElem
import org.scalajs.dom.experimental.domparser.DOMParser
import org.scalajs.dom.experimental.domparser.SupportedType

/**
 * XBRL instance test case.
 *
 * @author Chris de Vreeze
 */
class XbrlInstanceTest extends FunSuite {

  test("testCreateAndQueryInstance") {
    val db = new DOMParser()
    val domDoc: JsDomDocument = JsDomDocument.wrapDocument(db.parseFromString(xbrlInstanceString, SupportedType.`text/xml`))

    val rootElem: JsDomElem = domDoc.documentElement

    val xbrlInstance: XbrlInstance = XbrlInstance(rootElem)

    val tns = "http://xbrl.org/together"

    assertResult(List.fill(4)(EName(tns, "Primary01"))) {
      xbrlInstance.findAllFacts.map(_.resolvedName)
    }

    assertResult(Set("F_Member03_Member04", "F_Member03", "F_Member04", "F")) {
      xbrlInstance.allContextsById.keySet
    }

    assertResult(xbrlInstance.allContextsById.keySet) {
      xbrlInstance.allTopLevelItems.map(_.contextRef).toSet
    }

    val fCtx = xbrlInstance.allContextsById("F")

    assertResult(LocalDate.parse("2010-01-01").atStartOfDay) {
      fCtx.period.asInstantPeriod.instantDateTime
    }

    val f_03_04Ctx = xbrlInstance.allContextsById("F_Member03_Member04")

    assertResult(Map(
      EName(tns, "Dimension01") -> EName(tns, "Member03"),
      EName(tns, "Dimension02") -> EName(tns, "Member04"))) {

      f_03_04Ctx.explicitDimensionMembers
    }
  }

  private val xbrlInstanceString = """
<?xml version="1.0" encoding="US-ASCII"?>
<!-- Generated by Fujitsu XWand B0126C -->
<xbrli:xbrl xmlns:together="http://xbrl.org/together" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xbrldt="http://xbrl.org/2005/xbrldt" xmlns:xbrli="http://www.xbrl.org/2003/instance">
  <link:schemaRef xlink:type="simple" xlink:href="together.xsd"/>
  <xbrli:context id="F_Member03_Member04">
    <xbrli:entity>
      <xbrli:identifier scheme="http://scheme">NA</xbrli:identifier>
      <xbrli:segment>
        <xbrldi:explicitMember dimension="together:Dimension01">together:Member03</xbrldi:explicitMember>
        <xbrldi:explicitMember dimension="together:Dimension02">together:Member04</xbrldi:explicitMember>
      </xbrli:segment>
    </xbrli:entity>
    <xbrli:period>
      <xbrli:instant>2009-12-31</xbrli:instant>
    </xbrli:period>
  </xbrli:context>
  <xbrli:context id="F_Member03">
    <xbrli:entity>
      <xbrli:identifier scheme="http://scheme">NA</xbrli:identifier>
      <xbrli:segment>
        <xbrldi:explicitMember dimension="together:Dimension01">together:Member03</xbrldi:explicitMember>
      </xbrli:segment>
    </xbrli:entity>
    <xbrli:period>
      <xbrli:instant>2009-12-31</xbrli:instant>
    </xbrli:period>
  </xbrli:context>
  <xbrli:context id="F_Member04">
    <xbrli:entity>
      <xbrli:identifier scheme="http://scheme">NA</xbrli:identifier>
      <xbrli:segment>
        <xbrldi:explicitMember dimension="together:Dimension02">together:Member04</xbrldi:explicitMember>
      </xbrli:segment>
    </xbrli:entity>
    <xbrli:period>
      <xbrli:instant>2009-12-31</xbrli:instant>
    </xbrli:period>
  </xbrli:context>
  <xbrli:context id="F">
    <xbrli:entity>
      <xbrli:identifier scheme="http://scheme">NA</xbrli:identifier>
    </xbrli:entity>
    <xbrli:period>
      <xbrli:instant>2009-12-31</xbrli:instant>
    </xbrli:period>
  </xbrli:context>
  <xbrli:unit id="Monetary">
    <xbrli:measure>iso4217:USD</xbrli:measure>
  </xbrli:unit>
  <together:Primary01 decimals="0" contextRef="F_Member03_Member04" unitRef="Monetary">4000</together:Primary01>
  <together:Primary01 decimals="0" contextRef="F_Member03" unitRef="Monetary">2000</together:Primary01>
  <together:Primary01 decimals="0" contextRef="F_Member04" unitRef="Monetary">4000</together:Primary01>
  <together:Primary01 decimals="0" contextRef="F" unitRef="Monetary">2000</together:Primary01>
</xbrli:xbrl>
    """.trim
}
