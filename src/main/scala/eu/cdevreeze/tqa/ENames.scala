/*
 * Copyright 2011-2017 Chris de Vreeze
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.cdevreeze.tqa

import eu.cdevreeze.yaidom.core.EName

/**
 * Well-known ENames.
 *
 * @author Chris de Vreeze
 */
object ENames {

  import Namespaces._

  val XbrliItemEName = EName(XbrliNamespace, "item")
  val XbrliTupleEName = EName(XbrliNamespace, "tuple")

  val XbrldtTargetRoleEName = EName(XbrldtNamespace, "targetRole")
  val XbrldtUsableEName = EName(XbrldtNamespace, "usable")
  val XbrldtClosedEName = EName(XbrldtNamespace, "closed")
  val XbrldtDimensionItemEName = EName(XbrldtNamespace, "dimensionItem")
  val XbrldtHypercubeItemEName = EName(XbrldtNamespace, "hypercubeItem")
  val XbrldtTypedDomainRefEName = EName(XbrldtNamespace, "typedDomainRef")
  val XbrldtContextElement = EName(XbrldtNamespace, "contextElement")

  val XsSchemaEName = EName(XsNamespace, "schema")
  val XsElementEName = EName(XsNamespace, "element")
  val XsAttributeEName = EName(XsNamespace, "attribute")
  val XsComplexTypeEName = EName(XsNamespace, "complexType")
  val XsSimpleTypeEName = EName(XsNamespace, "simpleType")
  val XsAnnotationEName = EName(XsNamespace, "annotation")
  val XsComplexContentEName = EName(XsNamespace, "complexContent")
  val XsSimpleContentEName = EName(XsNamespace, "simpleContent")
  val XsGroupEName = EName(XsNamespace, "group")
  val XsAllEName = EName(XsNamespace, "all")
  val XsChoiceEName = EName(XsNamespace, "choice")
  val XsSequenceEName = EName(XsNamespace, "sequence")
  val XsAttributeGroupEName = EName(XsNamespace, "attributeGroup")
  val XsAnyAttributeEName = EName(XsNamespace, "anyAttribute")
  val XsUniqueEName = EName(XsNamespace, "unique")
  val XsKeyEName = EName(XsNamespace, "key")
  val XsKeyrefEName = EName(XsNamespace, "keyref")
  val XsNotationEName = EName(XsNamespace, "notation")
  val XsImportEName = EName(XsNamespace, "import")
  val XsIncludeEName = EName(XsNamespace, "include")
  val XsRedefineEName = EName(XsNamespace, "redefine")
  val XsRestrictionEName = EName(XsNamespace, "restriction")
  val XsExtensionEName = EName(XsNamespace, "extension")
  val XsListEName = EName(XsNamespace, "list")
  val XsUnionEName = EName(XsNamespace, "union")
  val XsAppinfoEName = EName(XsNamespace, "appinfo")
  val XsDocumentationEName = EName(XsNamespace, "documentation")
  val XsSelectorEName = EName(XsNamespace, "selector")
  val XsFieldEName = EName(XsNamespace, "field")
  val XsAnyEName = EName(XsNamespace, "any")

  val XsMinExclusiveEName = EName(XsNamespace, "minExclusive")
  val XsMinInclusiveEName = EName(XsNamespace, "minInclusive")
  val XsMaxExclusiveEName = EName(XsNamespace, "maxExclusive")
  val XsMaxInclusiveEName = EName(XsNamespace, "maxInclusive")
  val XsTotalDigitsEName = EName(XsNamespace, "totalDigits")
  val XsFractionDigitsEName = EName(XsNamespace, "fractionDigits")
  val XsLengthEName = EName(XsNamespace, "length")
  val XsMinLengthEName = EName(XsNamespace, "minLength")
  val XsMaxLengthEName = EName(XsNamespace, "maxLength")
  val XsEnumerationEName = EName(XsNamespace, "enumeration")
  val XsWhiteSpaceEName = EName(XsNamespace, "whiteSpace")
  val XsPatternEName = EName(XsNamespace, "pattern")

  val XsAnyURI_EName = EName(XsNamespace, "anyURI")
  val XsBase64BinaryEName = EName(XsNamespace, "base64Binary")
  val XsBooleanEName = EName(XsNamespace, "boolean")
  val XsByteEName = EName(XsNamespace, "byte")
  val XsDateEName = EName(XsNamespace, "date")
  val XsDateTimeEName = EName(XsNamespace, "dateTime")
  val XsDecimalEName = EName(XsNamespace, "decimal")
  val XsDerivationControlEName = EName(XsNamespace, "derivationControl")
  val XsDoubleEName = EName(XsNamespace, "double")
  val XsDurationEName = EName(XsNamespace, "duration")
  val XsENTITIES_EName = EName(XsNamespace, "ENTITIES")
  val XsENTITY_EName = EName(XsNamespace, "ENTITY")
  val XsFloatEName = EName(XsNamespace, "float")
  val XsGDayEName = EName(XsNamespace, "gDay")
  val XsGMonthEName = EName(XsNamespace, "gMonth")
  val XsGMonthDayEName = EName(XsNamespace, "gMonthDay")
  val XsGYearEName = EName(XsNamespace, "gYear")
  val XsGYearMonthEName = EName(XsNamespace, "gYearMonth")
  val XsHexBinaryEName = EName(XsNamespace, "hexBinary")
  val XsID_EName = EName(XsNamespace, "ID")
  val XsIDREF_EName = EName(XsNamespace, "IDREF")
  val XsIDREFS_EName = EName(XsNamespace, "IDREFS")
  val XsIntEName = EName(XsNamespace, "int")
  val XsIntegerEName = EName(XsNamespace, "integer")
  val XsLanguageEName = EName(XsNamespace, "language")
  val XsLongEName = EName(XsNamespace, "long")
  val XsNameEName = EName(XsNamespace, "Name")
  val XsNCNameEName = EName(XsNamespace, "NCName")
  val XsNegativeIntegerEName = EName(XsNamespace, "negativeInteger")
  val XsNMTOKEN_EName = EName(XsNamespace, "NMTOKEN")
  val XsNMTOKENS_EName = EName(XsNamespace, "NMTOKENS")
  val XsNonNegativeIntegerEName = EName(XsNamespace, "nonNegativeInteger")
  val XsNonPositiveIntegerEName = EName(XsNamespace, "nonPositiveInteger")
  val XsNormalizedStringEName = EName(XsNamespace, "normalizedString")
  val XsNOTATION_EName = EName(XsNamespace, "NOTATION")
  val XsPositiveIntegerEName = EName(XsNamespace, "positiveInteger")
  val XsQNameEName = EName(XsNamespace, "QName")
  val XsShortEName = EName(XsNamespace, "short")
  val XsSimpleDerivationSetEName = EName(XsNamespace, "simpleDerivationSet")
  val XsStringEName = EName(XsNamespace, "string")
  val XsTimeEName = EName(XsNamespace, "time")
  val XsTokenEName = EName(XsNamespace, "token")
  val XsUnsignedByteEName = EName(XsNamespace, "unsignedByte")
  val XsUnsignedIntEName = EName(XsNamespace, "unsignedInt")
  val XsUnsignedLongEName = EName(XsNamespace, "unsignedLong")
  val XsUnsignedShortEName = EName(XsNamespace, "unsignedShort")
  val XsAnyAtomicTypeEName = EName(XsNamespace, "anyAtomicType")
  val XsAnySimpleTypeEName = EName(XsNamespace, "anySimpleType")
  val XsAnyTypeEName = EName(XsNamespace, "anyType")

  val LinkLinkbaseEName = EName(LinkNamespace, "linkbase")

  val LinkSchemaRefEName = EName(LinkNamespace, "schemaRef")
  val LinkLinkbaseRefEName = EName(LinkNamespace, "linkbaseRef")
  val LinkRoleRefEName = EName(LinkNamespace, "roleRef")
  val LinkArcroleRefEName = EName(LinkNamespace, "arcroleRef")

  val LinkLabelLinkEName = EName(LinkNamespace, "labelLink")
  val LinkLocEName = EName(LinkNamespace, "loc")
  val LinkLabelEName = EName(LinkNamespace, "label")
  val LinkLabelArcEName = EName(LinkNamespace, "labelArc")

  val LinkPresentationLinkEName = EName(LinkNamespace, "presentationLink")
  val LinkPresentationArcEName = EName(LinkNamespace, "presentationArc")

  val LinkReferenceLinkEName = EName(LinkNamespace, "referenceLink")
  val LinkReferenceEName = EName(LinkNamespace, "reference")
  val LinkReferenceArcEName = EName(LinkNamespace, "referenceArc")

  val LinkDefinitionLinkEName = EName(LinkNamespace, "definitionLink")
  val LinkDefinitionArcEName = EName(LinkNamespace, "definitionArc")

  val LinkCalculationLinkEName = EName(LinkNamespace, "calculationLink")
  val LinkCalculationArcEName = EName(LinkNamespace, "calculationArc")

  val LinkRoleTypeEName = EName(LinkNamespace, "roleType")
  val LinkArcroleTypeEName = EName(LinkNamespace, "arcroleType")

  val LinkPartEName = EName(LinkNamespace, "part")

  val GenLinkEName = EName(GenNamespace, "link")
  val GenArcEName = EName(GenNamespace, "arc")

  val LabelLabelEName = EName(LabelNamespace, "label")
  val ReferenceReferenceEName = EName(ReferenceNamespace, "reference")

  val VariableVariableArcEName = EName(VariableNamespace, "variableArc")
  val VariableVariableFilterArcEName = EName(VariableNamespace, "variableFilterArc")
  val VariableVariableSetFilterArcEName = EName(VariableNamespace, "variableSetFilterArc")
  val VariablePreconditionEName = EName(VariableNamespace, "precondition")
  val VariableParameterEName = EName(VariableNamespace, "parameter")
  val VariableFactVariableEName = EName(VariableNamespace, "factVariable")
  val VariableGeneralVariableEName = EName(VariableNamespace, "generalVariable")
  val VariableFunctionEName = EName(VariableNamespace, "function")
  val VariableEqualityDefinitionEName = EName(VariableNamespace, "equalityDefinition")
  val VariableInputEName = EName(VariableNamespace, "input")

  val ValidationAssertionSetEName = EName(ValidationNamespace, "assertionSet")

  val InstancesInstanceEName = EName(InstancesNamespace, "instance")

  val MsgMessageEName = EName(MsgNamespace, "message")

  val XmlLangEName = EName(XmlNamespace, "lang")
  val XmlBaseEName = EName(XmlNamespace, "base")

  val XsiSchemaLocationEName = EName(XsiNamespace, "schemaLocation")

  val FormulaFormulaEName = EName(FormulaNamespace, "formula")
  val FormulaAspectsEName = EName(FormulaNamespace, "aspects")
  val FormulaPrecisionEName = EName(FormulaNamespace, "precision")
  val FormulaDecimalsEName = EName(FormulaNamespace, "decimals")
  val FormulaConceptEName = EName(FormulaNamespace, "concept")
  val FormulaExplicitDimensionEName = EName(FormulaNamespace, "explicitDimension")
  val FormulaMemberEName = EName(FormulaNamespace, "member")
  val FormulaQNameEName = EName(FormulaNamespace, "qname")
  val FormulaQNameExpressionEName = EName(FormulaNamespace, "qnameExpression")
  val FormulaOmitEName = EName(FormulaNamespace, "omit")
  val FormulaValueEName = EName(FormulaNamespace, "value")
  val FormulaXpathEName = EName(FormulaNamespace, "xpath")
  val FormulaForeverEName = EName(FormulaNamespace, "forever")
  val FormulaInstantEName = EName(FormulaNamespace, "instant")
  val FormulaDurationEName = EName(FormulaNamespace, "duration")
  val FormulaMultiplyByEName = EName(FormulaNamespace, "multiplyBy")
  val FormulaDivideByEName = EName(FormulaNamespace, "divideBy")

  val VaValueAssertionEName = EName(VaNamespace, "valueAssertion")

  val EaExistenceAssertionEName = EName(EaNamespace, "existenceAssertion")

  val CaConsistencyAssertionEName = EName(CaNamespace, "consistencyAssertion")

  val TableTableEName = EName(TableNamespace, "table")
  val TableBreakdownEName = EName(TableNamespace, "breakdown")
  val TableRuleNodeEName = EName(TableNamespace, "ruleNode")
  val TableConceptRelationshipNodeEName = EName(TableNamespace, "conceptRelationshipNode")
  val TableDimensionRelationshipNodeEName = EName(TableNamespace, "dimensionRelationshipNode")
  val TableAspectNodeEName = EName(TableNamespace, "aspectNode")
  val TableTableBreakdownArcEName = EName(TableNamespace, "tableBreakdownArc")
  val TableBreakdowntreeArcEName = EName(TableNamespace, "breakdownTreeArc")
  val TableDefinitionNodeSubtreeArcEName = EName(TableNamespace, "definitionNodeSubtreeArc")
  val TableTableFilterArcEName = EName(TableNamespace, "tableFilterArc")
  val TableTableParameterArcEName = EName(TableNamespace, "tableParameterArc")
  val TableAspectNodeFilterArcEName = EName(TableNamespace, "aspectNodeFilterArc")
  val TableConceptAspectEName = EName(TableNamespace, "conceptAspect")
  val TableUnitAspectEName = EName(TableNamespace, "unitAspect")
  val TableEntityIdentifierAspectEName = EName(TableNamespace, "entityIdentifierAspect")
  val TablePeriodAspectEName = EName(TableNamespace, "periodAspect")
  val TableDimensionAspectEName = EName(TableNamespace, "dimensionAspect")
  val TableRuleSetEName = EName(TableNamespace, "ruleSet")
  val TableDimensionEName = EName(TableNamespace, "dimension")
  val TableRelationshipSourceEName = EName(TableNamespace, "relationshipSource")
  val TableRelationshipSourceExpressionEName = EName(TableNamespace, "relationshipSourceExpression")
  val TableLinkroleEName = EName(TableNamespace, "linkrole")
  val TableLinkroleExpressionEName = EName(TableNamespace, "linkroleExpression")
  val TableArcroleEName = EName(TableNamespace, "arcrole")
  val TableArcroleExpressionEName = EName(TableNamespace, "arcroleExpression")
  val TableFormulaAxisEName = EName(TableNamespace, "formulaAxis")
  val TableFormulaAxisExpressionEName = EName(TableNamespace, "formulaAxisExpression")
  val TableGenerationsEName = EName(TableNamespace, "generations")
  val TableGenerationsExpressionEName = EName(TableNamespace, "generationsExpression")
  val TableLinknameEName = EName(TableNamespace, "linkname")
  val TableLinknameExpressionEName = EName(TableNamespace, "linknameExpression")
  val TableArcnameEName = EName(TableNamespace, "arcname")
  val TableArcnameExpressionEName = EName(TableNamespace, "arcnameExpression")

  val SevOkEName = EName(SevNamespace, "ok")
  val SevWarningEName = EName(SevNamespace, "warning")
  val SevErrorEName = EName(SevNamespace, "error")

  val GplPreferredLabelEName = EName(GplNamespace, "preferredLabel")

  val NameEName = EName("name")
  val IdEName = EName("id")
  val FormEName = EName("form")
  val AbstractEName = EName("abstract")
  val FinalEName = EName("final")
  val DefaultEName = EName("default")
  val FixedEName = EName("fixed")
  val TypeEName = EName("type")
  val NillableEName = EName("nillable")
  val BlockEName = EName("block")
  val UseEName = EName("use")
  val SubstitutionGroupEName = EName("substitutionGroup")
  val RefEName = EName("ref")
  val ReferEName = EName("refer")
  val SchemaLocationEName = EName("schemaLocation")
  val MinOccursEName = EName("minOccurs")
  val MaxOccursEName = EName("maxOccurs")
  val BaseEName = EName("base")
  val TargetNamespaceEName = EName("targetNamespace")
  val ElementFormDefaultEName = EName("elementFormDefault")
  val AttributeFormDefaultEName = EName("attributeFormDefault")
  val HrefEName = EName("href")
  val OrderEName = EName("order")
  val NamespaceEName = EName("namespace")
  val PreferredLabelEName = EName("preferredLabel")
  val PriorityEName = EName("priority")
  val MixedEName = EName("mixed")
  val ComplementEName = EName("complement")
  val CoverEName = EName("cover")
  val TestEName = EName("test")
  val AspectModelEName = EName("aspectModel")
  val ImplicitFilteringEName = EName("implicitFiltering")
  val BindAsSequenceEName = EName("bindAsSequence")
  val PrecisionEName = EName("precision")
  val DecimalsEName = EName("decimals")
  val SourceEName = EName("source")
  val ValueEName = EName("value")
  val StrictEName = EName("strict")
  val SelectEName = EName("select")
  val AbsoluteAcceptanceRadiusEName = EName("absoluteAcceptanceRadius")
  val ProportionalAcceptanceRadiusEName = EName("proportionalAcceptanceRadius")
  val RequiredEName = EName("required")
  val AsEName = EName("as")
  val NilsEName = EName("nils")
  val MatchesEName = EName("matches")
  val FallbackValueEName = EName("fallbackValue")
  val RoleURIEName = EName("roleURI")
  val ArcroleURIEName = EName("arcroleURI")
  val ParentChildOrderEName = EName("parentChildOrder")
  val TagSelectorEName = EName("tagSelector")
  val MergeEName = EName("merge")
  val AxisEName = EName("axis")
  val DimensionEName = EName("dimension")
  val IncludeUnreportedValueEName = EName("includeUnreportedValue")
  val SchemeEName = EName("scheme")
  val TagEName = EName("tag")
  val OccEName = EName("occ")
  val AugmentEName = EName("augment")
  val OutputEName = EName("output")
  val PeriodTypeEName = EName("periodType")
  val BalanceEName = EName("balance")
  val PatternEName = EName("pattern")
  val VariableEName = EName("variable")
  val MatchAnyEName = EName("matchAny")
  val DateEName = EName("date")
  val TimeEName = EName("time")
  val BoundaryEName = EName("boundary")
  val LocationEName = EName("location")
  val MinimumEName = EName("minimum")

  // "Own" ENames

  val LnkLinkbase = EName(LnkNamespace, "linkbase")
  val LnkConcept = EName(LnkNamespace, "concept")
  val LnkQname = EName(LnkNamespace, "qname")
  val LnkPresentationLink = EName(LnkNamespace, "presentationLink")
  val LnkPresentationArc = EName(LnkNamespace, "presentationArc")
}
